{"name": "test_login", "status": "broken", "statusDetails": {"message": "AttributeError: png", "trace": "self = <allurereports.login.TestHrm object at 0x7fba2ac215c0>\n\n    @allure.severity(allure.severity_level.CRITICAL)\n    def test_login(self):\n        self.driver=webdriver.Chrome()\n        self.driver.get(\"https://opensource-demo.orangehrmlive.com/\")\n        self.driver.find_element_by_id(\"txtUsername\").send_keys(\"Admin\")\n        self.driver.find_element_by_id(\"txtPassword\").send_keys(\"admin123\")\n        self.driver.find_element_by_name(\"Submit\").click()\n        actual_title=self.driver.title\n        if actual_title==\"OrangeHRM123\":\n            self.driver.close()\n            assert True\n        else:\n>           allure.attach(self.driver.get_screenshot_as_png(),name=\"testloginscreen\",attachment_type=AttachmentType.png)\n\nlogin.py:36: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ncls = <enum 'AttachmentType'>, name = 'png'\n\n    def __getattr__(cls, name):\n        \"\"\"Return the enum member matching `name`\n    \n        We use __getattr__ instead of descriptors or inserting into the enum\n        class' __dict__ in order to support `name` and `value` being both\n        properties for enum members (which live in the class' __dict__) and\n        enum members themselves.\n    \n        \"\"\"\n        if _is_dunder(name):\n            raise AttributeError(name)\n        try:\n            return cls._member_map_[name]\n        except KeyError:\n>           raise AttributeError(name) from None\nE           AttributeError: png\n\n/usr/lib/python3.7/enum.py:349: AttributeError"}, "start": 1582631965051, "stop": 1582631986714, "uuid": "71c2805c-ebdc-4a02-b940-c5fb481ee30b", "historyId": "940f90af8d37acbcec3654b12e46e235", "testCaseId": "5c5ec0be238f40aef1cad2542760644e", "fullName": "login.TestHrm#test_login", "labels": [{"name": "severity", "value": "critical"}, {"name": "suite", "value": "login"}, {"name": "subSuite", "value": "TestHrm"}, {"name": "host", "value": "admin1-desktop"}, {"name": "thread", "value": "21512-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "login"}]}